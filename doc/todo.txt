
1、去掉requestId ，因为在它是requestId，它在context中，已经保存了。

2、正确使用cobra.Command
   cmd.Flags().Float64Var(&opts.Balance, "balance", 0, "annual closing status")
   这种情况，获取不到正确的值。都是默认值。
   
3、把client Api中的错误码去掉，直接使用从服务端返回的错误码，这样可以解决根据根据不同的错误码，进行相应的操作。
该问题已经解决，可以根据YearBalance进行修改代码


4、下次修改client库时，顺便把Verbose也作为一个参数，控制是否输出详细信息。

5、// 由于把json解析成interface{}时，把number解析成float64
// 所以为了判断是否是传过来的整形类型数据，就增加了是否float类型的判断。该函数有bug，需要修改
func validate_int_arr(d interface{}) bool {
	if l, ok := d.([]interface{}); !ok {
		return false
	} else {
		for _, i := range l {
			if _, ok := i.(int); !ok {
				return validate_float64(d)
			}
		}
	}
	return true
}


6、
是否允许不同的账户同时操作一家公司的数据？ 如果允许，就需要进行数据的同步。因为在每个客户端里都缓存了凭证数据。

7、优化年度结算的算法，现在年度结算大1.5s左右


8、多列排序的问题，因为都是map,会造成key排序。导致生成的order后面 字段先后顺序不一致。
解决了

9、填写凭证的界面。 当科目名称长时，就会出现进度条。  是否可以考虑，如果名称长的话，是否可以写多行。

15、	第2行摘要带不出来	

10、数据结果的返回值，要都转换成中文字符集编码。
已经解决
11、下次生成docker 镜像要进行自动化，不能在手动了。

12、把从缓存取数据的地方，把返回的指针，转换为类对象或者是share_ptr

13、看看是否可以使用goctl,grpc

14、在客户端部分，把c调用go库的地方，统一制定一下返回值：错误码：错误信息，或者 错误码：数据信息
已经解决
	
15、重新登录