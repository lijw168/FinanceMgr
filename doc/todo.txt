
1、去掉requestId ，因为在它是requestId，它在context中，已经保存了。

2、正确使用cobra.Command
   cmd.Flags().Float64Var(&opts.Balance, "balance", 0, "annual closing status")
   这种情况，获取不到正确的值。都是默认值。
   
3、把client Api中的错误码去掉，直接使用从服务端返回的错误码，这样可以解决根据根据不同的错误码，进行相应的操作。
该问题已经解决。


4、下次修改client库时，顺便把Verbose也作为一个参数，控制是否输出详细信息。

5、// 由于把json解析成interface{}时，把number解析成float64
// 所以为了判断是否是传过来的整形类型数据，就增加了是否float类型的判断。该函数有bug，需要修改
func validate_int_arr(d interface{}) bool {
	if l, ok := d.([]interface{}); !ok {
		return false
	} else {
		for _, i := range l {
			if _, ok := i.(int); !ok {
				return validate_float64(d)
			}
		}
	}
	return true
}


6、
是否允许不同的账户同时操作一家公司的数据？ 如果允许，就需要进行数据的同步。因为在每个客户端里都缓存了凭证数据。

7、优化年度结算的算法，现在年度结算大1.5s左右


8、多列排序的问题，因为都是map,会造成key排序。导致生成的order后面 字段先后顺序不一致。
解决了

9、填写凭证的界面。 当科目名称长时，就会出现进度条。  是否可以考虑，如果名称长的话，是否可以写多行。

15、	第2行摘要带不出来	
解决了

10、数据结果的返回值，要都转换成中文字符集编码。
已经解决

11、下次生成docker 镜像要进行自动化，不能在手动了。

12、把从缓存取数据的地方，把返回的指针，转换为类对象或者是share_ptr

13、看看是否可以使用goctl,grpc

14、在客户端部分，把c调用go库的地方，统一制定一下返回值：错误码：错误信息，或者 错误码：数据信息
已经解决
	
15、重新登录

16、需要把Login宏定义修改为UserLogin，这样的话，就与client里定义的保持一致。
17、缺少每个函数调用日志，除错误日志之外的。
18、把所有涉及到数据的，在数据库中使用bingint表示，并且在运算时也使用int计算，只是在界面上显示时，使用double

19、在显示凭证的页面，如果修改了凭证，但我想放弃修改，也是可以的。需要增加这个功能
工具栏中的‘放弃’按钮，可以实现。

20、VoucherRecordView 该字段中的voucherID ,不需要，在数据库中VoucherRecord表中可以存在，但在前端这，就不应该有了。因为在voucherInfo里，已经有了。

21、审核凭证，需要修改。

22、凭证的顺序是根据单据的报销日期定的，所以凭证的序号，也需要按照这个顺序定。那就需要修改，插入凭证时，凭证的序号。

23、凭证需要支持跨年度查询。目前是不能跨年度查询的。
比如：我登录的日期永远选择 当天日期，但做凭证、查询可以选择任意年份和任意月份

24、放开对登录日期之后的凭证的修改的限制。

25、状态检查修改为当30S内没有发送请求，就发送一次状态检查的请求。可以考虑一下，怎样实现

26、统计界面polyPane  重构，要各类及派生类各负其责。现在有基类与派生类的函数调用，有点混乱。

27、填制凭证，当点击原来的数据时，比如：100000，然后再点击其他地方，会变成100
已修改

28、解决了填制凭证时，不能增加行的问题。
已经解决，该问题的原因是判断是否增加行的逻辑条件判断错误。

29、解决了填制凭证时，点击单元格后，不能进行编辑的问题。
已经解决，该问题的原因是判断是否进行编辑的逻辑条件判断错误。

30、把计算余额表，明细表，这些表的统计，应该放在后台，因为以后会有通过浏览器进行访问的方式。

31、在会计科目界面里，增加方向一列。